{"version":3,"sources":["redux/action/actionType.js","components/Task.js","redux/action/action.js","redux/reducers/index.js","redux/reducers/mainRootReducers.js","redux/store.js","App.js","index.js"],"names":["FETCH_EMPLOYEE_DATA","Task","dispatch","useDispatch","useState","search","setSearch","name","setName","actionType","setActionType","applicationType","setApplicationType","formDate","setFormDate","applicationId","setApplicationId","useEffect","a","axios","get","DataDetailsData","data","result","auditLog","console","log","className","class","onChange","e","target","value","type","placeholder","id","onClick","filtered","filter","parseInt","logId","creationTimestamp","url","URL","window","location","href","searchParams","set","history","pushState","toString","handleSubmit","title","columns","field","options","pageSize","pageSizeOptions","emplyeeData","state","action","payload","mainRootReducers","combineReducers","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6267588.chunk.js","sourcesContent":["export const FETCH_EMPLOYEE_DATA = 'FETCH_EMPLOYEE_DATA'","import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport \"./Task.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EmployeeDetailsFetch } from \"../redux/action/action\";\n\nconst Task = () => {\n  const dispatch = useDispatch();\n  // const emplyeData = useSelector((state) => state.emplyeeData);\n  const [search, setSearch] = useState();\n  const [name, setName] = useState(\"\");\n  const [actionType, setActionType] = useState(\"\");\n  const [applicationType, setApplicationType] = useState(\"\");\n  const [formDate, setFormDate] = useState(\"\");\n\n  const [applicationId, setApplicationId] = useState(\"\");\n  let columns = [\n    { title: \"Log ID\", field: \"logId\" },\n    { title: \"Application Type\", field: \"applicationType\" },\n    { title: \"Application ID\", field: \"applicationId\" },\n    { title: \"Action\", field: \"actionType\" },\n    { title: \"Action Details\", field: \"actionDetails\" },\n    { title: \"Date Time\", field: \"creationTimestamp\" },\n  ];\n  useEffect(() => {\n    (async () => {\n      try {\n        setSearch(await dispatch(EmployeeDetailsFetch()));\n        // await dispatch(EmployeeDetailsFetch());\n      } catch (error) {\n        console.log(\"error raised\", error);\n      }\n    })();\n  }, []);\n\n  const handleSubmit = () => {\n    const filtered = search.filter((search) => {\n      return (\n        search.applicationId === parseInt(applicationId) ||\n        search.logId === parseInt(name) ||\n        search.actionType === actionType ||\n        search.applicationType === applicationType ||\n        search.creationTimestamp === formDate\n      );\n    });\n    setSearch(filtered);\n    const url = new URL(window.location.href);\n    url.searchParams.set(\"logId\", name);\n    url.searchParams.set(\"applicationId\", applicationId);\n    url.searchParams.set(\"actionType\", actionType);\n    url.searchParams.set(\"applicationType\", applicationType);\n    window.history.pushState({}, \"\", url.toString());\n  };\n\n  return (\n    <>\n      <div className=\"Container\">\n        <form className=\"form-Container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <label>Employee Name</label>\n              <input\n                onChange={(e) => setName(e.target.value)}\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Employee Name\"\n              />\n            </div>\n            <div class=\"col\">\n              <label>Action Type</label>\n              <select\n                name=\"application\"\n                id=\"dog-names\"\n                className=\"form-control\"\n                onChange={(e) => setActionType(e.target.value)}\n              >\n                <option value=\"\"></option>\n                <option value=\"DARI_REFRESH_TOKEN\">DARI_REFRESH_TOKEN</option>\n                <option value=\"DARI_APP_LOGIN\">DARI_APP_LOGIN</option>\n                <option value=\"INITIATE_APPLICATION\">\n                  INITIATE_APPLICATION\n                </option>\n                <option value=\"SUBMIT_APPLICATION\">SUBMIT_APPLICATION</option>\n                <option value=\"SUBMIT_APPLICATION\">ADD_EMPLOYEE</option>\n              </select>\n            </div>\n\n            <div class=\"col\">\n              <label>Application Type</label>\n              <select\n                name=\"application\"\n                id=\"dog-names\"\n                className=\"form-control\"\n                onChange={(e) => setApplicationType(e.target.value)}\n              >\n                <option value=\"\"></option>\n                <option value=\"CERT_TITLE_DEED_PLOT\">\n                  CERT_TITLE_DEED_PLOT\n                </option>\n                <option value=\"LEASE_REGISTRATION\">LEASE_REGISTRATION</option>\n                <option value=\"ADD_POA\">ADD_POA</option>\n                <option value=\"LEASE_REGISTRATION\">LEASE_REGISTRATION</option>\n                <option value=\"LEASE_REGISTRATION\">ADD_COMPANY</option>\n                <option value=\"LEASE_REGISTRATION\">\n                  {\" \"}\n                  ADD_COMPANY_EMPLOYEE\n                </option>\n                <option value=\"LEASE_REGISTRATION\"> CERT_PROP_OWNERSHIP</option>\n              </select>\n            </div>\n            <div class=\"col\">\n              <label>Date</label>\n              <input\n                type=\"date\"\n                class=\"form-control\"\n                onChange={(e) => setFormDate(e.target.value)}\n              />\n            </div>\n            \n            <div class=\"col\">\n              <label>Application Id</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"2898690\"\n                onChange={(e) => setApplicationId(e.target.value)}\n              />\n            </div>\n            <div class=\"col\">\n              <button\n                type=\"button\"\n                class=\"btn btn-primary mt-4\"\n                onClick={() => handleSubmit()}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </form>\n        <MaterialTable\n          title=\"\"\n          columns={columns}\n          data={search}\n          options={{\n            pageSize: 10,\n            pageSizeOptions: [10],\n            search: false,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Task;\n","import axios from 'axios';\nimport {\n  FETCH_EMPLOYEE_DATA\n} from './actionType';\nexport const EmployeeDetailsFetch = () => async (dispatch) => {\n    try {\n      const DataDetailsData = await axios.get(\n        'https://run.mocky.io/v3/a2fbc23e-069e-4ba5-954c-cd910986f40f',\n\n      );\n      // dispatch({\n      //   type: FETCH_EMPLOYEE_DATA,\n      //   payload: DataDetailsData.data.result.auditLog\n      // });\n      return DataDetailsData.data.result.auditLog;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  };\n  ","import { FETCH_EMPLOYEE_DATA } from \"../action/actionType\";\n\nconst emplyeeData = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_EMPLOYEE_DATA:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default emplyeeData;\n","import { combineReducers } from \"redux\";\nimport emplyeeData from './index'\n\nconst mainRootReducers = combineReducers({\n    emplyeeData\n})\n\nexport default (state,action ) => mainRootReducers(state, action)","import { applyMiddleware, createStore, compose } from 'redux';\nimport mainRootReducers from './reducers/mainRootReducers';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  mainRootReducers,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React from \"react\";\nimport Task from \"./components/Task\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <div>\n          <Task />\n        </div>\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}